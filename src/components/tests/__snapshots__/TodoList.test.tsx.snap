// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoList should create TodoList with  todos items 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <section
        class="main"
      >
        <div>
          <input
            class="toggle-all"
            id="toggle-all"
            type="checkbox"
          />
          <label
            for="toggle-all"
          >
            Mark all as complete
          </label>
        </div>
        <ul
          class="todo-list"
        >
          <li
            class=" "
          >
            <div
              class="view"
            >
              <input
                class="toggle"
                type="checkbox"
              />
              <label>
                React
              </label>
              <button
                class="destroy"
              />
            </div>
            <input
              class="edit"
              value="React"
            />
          </li>
          <li
            class=" "
          >
            <div
              class="view"
            >
              <input
                class="toggle"
                type="checkbox"
              />
              <label>
                Redux
              </label>
              <button
                class="destroy"
              />
            </div>
            <input
              class="edit"
              value="Redux"
            />
          </li>
        </ul>
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      class="main"
    >
      <div>
        <input
          class="toggle-all"
          id="toggle-all"
          type="checkbox"
        />
        <label
          for="toggle-all"
        >
          Mark all as complete
        </label>
      </div>
      <ul
        class="todo-list"
      >
        <li
          class=" "
        >
          <div
            class="view"
          >
            <input
              class="toggle"
              type="checkbox"
            />
            <label>
              React
            </label>
            <button
              class="destroy"
            />
          </div>
          <input
            class="edit"
            value="React"
          />
        </li>
        <li
          class=" "
        >
          <div
            class="view"
          >
            <input
              class="toggle"
              type="checkbox"
            />
            <label>
              Redux
            </label>
            <button
              class="destroy"
            />
          </div>
          <input
            class="edit"
            value="Redux"
          />
        </li>
      </ul>
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TodoList should create TodoList with empty todos 1`] = `
Object {
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <section
        class="main"
      >
        <div>
          <input
            class="toggle-all"
            id="toggle-all"
            type="checkbox"
          />
          <label
            for="toggle-all"
          >
            Mark all as complete
          </label>
        </div>
        <ul
          class="todo-list"
        />
      </section>
    </div>
  </body>,
  "container": <div>
    <section
      class="main"
    >
      <div>
        <input
          class="toggle-all"
          id="toggle-all"
          type="checkbox"
        />
        <label
          for="toggle-all"
        >
          Mark all as complete
        </label>
      </div>
      <ul
        class="todo-list"
      />
    </section>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
